pipeline {
    agent {
        dockerfile {
            filename "etc/dockerfile.build.jenkins"
            /* warning /home/jenkins/cache/* have to be created before first launch, if not it is created by root and is not usable, also $HOME does not work and XDG var are not set*/
            /* warning use simple quote to avoid jenkins try to find $HOME (and don't find it...) */
            additionalBuildArgs '--build-arg UID=$(id -u) --build-arg GID=$(id -g)'
            args '--network=ci.network --volume $HOME/cache/pip:/home/jenkins/.cache/pip --volume $HOME/cache/composer:/home/jenkins/.composer/cache'
        }
    }

    environment {
        RND = "${BUILD_NUMBER}_${BRANCH_NAME}"
        PHPUNITARG="--testsuite Unit"
        COMPOSERARG="--no-scripts"
    }

    options {
        timeout(time: 1, unit: 'HOURS')
        timestamps()
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    stages {
        stage ('Where Am I') {
            steps {
                sh "uname -a"
                sh "php -v"
                sh "composer -V"
            }
        }

        stage ('Set Env') {
            steps {
                sh './bin/ci-scripts/set_env_with_etcd.sh'
                sh "cat ./.env"
                sh "mkdir -p build"
            }
        }

        stage ('Prepare') {
            steps {
                sh "./bin/ci-scripts/do_run.sh before_install_test.sh"
            }
        }

        stage ('Install Test') {
            steps {
                sh "./bin/ci-scripts/do_run.sh install_test.sh"
            }
        }

        stage ('Run Test') {
            steps {
                sh "./bin/ci-scripts/do_run.sh run_test.sh"
                step([
                    $class: 'XUnitBuilder',
                    thresholds: [[$class: 'FailedThreshold', unstableThreshold: '1']],
                    tools: [[$class: 'JUnitType', pattern: 'build/junit.xml']]
                ])
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'build/coverage', reportFiles: 'index.html', reportName: 'Coverage Report', reportTitles: ''])
            }
        }

    }

    post {
        always {
            cleanWs()
        }
    }

}
